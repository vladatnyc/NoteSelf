{
    "title": "$:/plugins/tiddlywiki/dynaview",
    "description": "Dynamic scrolling and zooming effects",
    "author": "JeremyRuston",
    "core-version": ">=5.0.0",
    "list": "readme docs examples config",
    "version": "5.1.17",
    "plugin-type": "plugin",
    "dependents": "",
    "type": "application/json",
    "text": "{\n    \"tiddlers\": {\n        \"$:/plugins/tiddlywiki/dynaview/above-story\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/above-story\",\n            \"tags\": \"$:/tags/AboveStory-disabled\",\n            \"text\": \"<!-- Remove the \\\"-disabled\\\" part of the tag to cause the currently selected example to appear at the top of the story river. Intended to make it easier to make clean screencaps -->\\n<div style=\\\"height:100em;\\\">\\n<$transclude tiddler={{$:/state/tab--1915807570}} mode=\\\"block\\\"/>\\n</div>\\n\"\n        },\n        \"$:/config/DynaView/Optisizer\": {\n            \"title\": \"$:/config/DynaView/Optisizer\",\n            \"text\": \"no\"\n        },\n        \"$:/config/DynaView/Optisizer/Text\": {\n            \"title\": \"$:/config/DynaView/Optisizer/Text\",\n            \"text\": \"ABCDEFGHIJKLMnopqrstuvwxyzABCDEFGHIJKLMnopqrstuvwxyz\"\n        },\n        \"$:/config/DynaView/ViewportDimensions\": {\n            \"title\": \"$:/config/DynaView/ViewportDimensions\",\n            \"text\": \"no\"\n        },\n        \"$:/config/DynaView/UpdateAddressBar\": {\n            \"title\": \"$:/config/DynaView/UpdateAddressBar\",\n            \"text\": \"no\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/config\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/config\",\n            \"text\": \"<$checkbox tiddler=\\\"$:/config/DynaView/ViewportDimensions\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> Enable dynamic saving of the viewport [[width|$:/state/DynaView/ViewportDimensions/Width]] and [[height|$:/state/DynaView/ViewportDimensions/Height]]</$checkbox>\\n\\n<$checkbox tiddler=\\\"$:/config/DynaView/UpdateAddressBar\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> Update address bar while scrolling</$checkbox>\\n\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/docs\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/docs\",\n            \"text\": \"! Documentation\\n\\nThe components of this plugin include:\\n\\n* A background task that:\\n** performs specified actions when elements are scrolled into view\\n** updates certain base classes on the `document.body` according to the current zoom level\\n** if enabled in the DynaView config panel - dynamically stores the viewport dimensions in $:/state/viewport/width and $:/state/viewport/height\\n* Pre-configured CSS classes to simplify using those base classes\\n* Usage examples\\n\\n! Scroll Features\\n\\n!! Set tiddler field when visible\\n\\nThe background task detects when elements with the class `tc-dynaview-set-tiddler-when-visible` scroll into view. The first time that they do, the background task assigns the value in the attribute `data-dynaview-set-value` to the tiddler whose title is in the attribute `data-dynaview-set-tiddler`. This assignment can be tied to a reveal widget to cause content to be displayed when it becomes visible. If the class `tc-dynaview-expand-viewport` is set then the viewport is expanded so that the processing occurs when elements move near the viewport.\\n\\n!! Unset tiddler field when set visible before but then scrolled out of view\\n\\nThe background task detects when elements with the class `tc-dynaview-set-tiddler-when-visible` scroll out view after they have scrolled into view. When scrolling out of view after they have scrolled in, the background task assigns the value in the attribute `data-dynaview-unset-value` to the tiddler whose title is in the attribute `data-dynaview-unset-tiddler`. This assignment can be tied to a reveal widget to cause content to be hidden when it becomes invisible. If the class `tc-dynaview-expand-viewport` is set then the viewport is expanded so that the processing occurs when elements move near the viewport.\\n\\n!! Update address bar when scrolling\\n\\nThe background task detects the tiddler at the top of the viewport and sets the address bar location hash to the title of that tiddler.\\n\\n! Viewport Size Features\\n\\n!! Viewport Size Tracking\\n\\nThe background task can optionally dynamically update a pair of state tiddlers with the dimensions of the browser viewport.\\n\\n* Set the configuration tiddler $:/config/DynaView/ViewportDimensions to the text \\\"yes\\\" to enable this feature\\n* The viewport dimensions can be found in $:/state/DynaView/ViewportDimensions/Width and $:/state/DynaView/ViewportDimensions/Height\\n\\n!! Font \\\"Optisizer\\\"\\n\\nThe background task can optionally dynamically optimise the font size of a passage of text to match a desired line length.\\n\\n* Set the configuration tiddler $:/config/DynaView/Optisizer to the text \\\"yes\\\" to enable this feature\\n* Optionally, update the configuration tiddler $:/config/DynaView/Optisizer/Text with the \\\"maquette\\\" -- a character string matchng the desired length (this string should not include spaces).\\n* Assign the following CSS classes to appropriate elements on the page:\\n** `.tc-dynaview-optisizer-site` for an HTML element whose `offsetWidth` property gives the desired output width\\n** `.tc-dynaview-optisizer-maquette` for an HTML element that will contain the maquette\\n* The computed optimum font size can be found in the tiddler $:/state/DynaView/Optisizer/FontSize\\n\\nThe tiddler $:/plugins/tiddlywiki/dynaview/optisizer-maquette contains an example configuration that can be used to adjust the size of tiddler body text. To use it:\\n\\n* Set $:/config/DynaView/Optisizer to the text \\\"yes\\\"\\n* Set $:/themes/tiddlywiki/vanilla/metrics/bodyfontsize to `{{$:/state/DynaView/Optisizer/FontSize}}`\\n* Set $:/themes/tiddlywiki/vanilla/metrics/bodylineheight to `1.5` to ensure that the line height matches the font size\\n\\n! Zoom Features\\n\\n!! Document Body Zoom Classes\\n\\nThe background task sets the following classes on `document.body` according to the current zoom level.\\n\\n|!Class |!Description |\\n|`tc-dynaview-zoom-factor-1` |Set when the zoom level is less than 2.00 |\\n|`tc-dynaview-zoom-factor-2` |Set when the zoom level is greater than 2.00 and less than 3.00 |\\n|`tc-dynaview-zoom-factor-3` |Set when the zoom level is greater than 3.00 and less than 4.00 |\\n|`tc-dynaview-zoom-factor-4` |Set when the zoom level is greater than 4.00 |\\n|`tc-dynaview-zoom-factor-1-and-above` |Set when the zoom level is greater than or equal to 1.00 |\\n|`tc-dynaview-zoom-factor-1a-and-above` |Set when the zoom level is greater than or equal to 1.14 |\\n|`tc-dynaview-zoom-factor-1b-and-above` |Set when the zoom level is greater than or equal to 1.33 |\\n|`tc-dynaview-zoom-factor-1c-and-above` |Set when the zoom level is greater than or equal to 1.60 |\\n|`tc-dynaview-zoom-factor-2-and-above` |Set when the zoom level is greater than or equal to 2.00 |\\n|`tc-dynaview-zoom-factor-2a-and-above` |Set when the zoom level is greater than or equal to 2.66 |\\n|`tc-dynaview-zoom-factor-3-and-above` |Set when the zoom level is greater than or equal to 3.00 |\\n|`tc-dynaview-zoom-factor-4-and-above` |Set when the zoom level is greater than or equal to 4.00 |\\n\\n!! Pre-configured Classes\\n\\nThese classes can be used on any element to control its visibility at different zoom levels.\\n\\n|!Class |!Description |\\n|`tc-dynaview-zoom-visible-1-and-above` |Visible when the zoom level is 1.00 or more |\\n|`tc-dynaview-zoom-visible-1a-and-above` |Visible when the zoom level is 1.14 or more |\\n|`tc-dynaview-zoom-visible-1b-and-above` |Visible when the zoom level is 1.33 or more |\\n|`tc-dynaview-zoom-visible-1c-and-above` |Visible when the zoom level is 1.60 or more |\\n|`tc-dynaview-zoom-visible-2-and-above` |Visible when the zoom level is 2.00 or more |\\n|`tc-dynaview-zoom-visible-2a-and-above` |Visible when the zoom level is 2.66 or more |\\n|`tc-dynaview-zoom-visible-3-and-above` |Visible when the zoom level is 3.00 or more |\\n|`tc-dynaview-zoom-visible-4-and-above` |Visible when the zoom level is 4.00 or more |\\n|`tc-dynaview-zoom-visible-1` |Visible when the zoom level is less than 2.00 |\\n|`tc-dynaview-zoom-visible-2` |Visible when the zoom level is greater than or equal to 2.00 and less than 3.00 |\\n|`tc-dynaview-zoom-visible-3` |Visible when the zoom level is greater than or equal to 3.00 and less than 4.00 |\\n|`tc-dynaview-zoom-visible-4` |Visible when the zoom level is greater than or equal to 4.00 |\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/dynaview.js\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/dynaview.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/tiddlywiki/dynaview/dynaview.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nZoom everything\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Export name and synchronous status\\nexports.name = \\\"dynaview\\\";\\nexports.platforms = [\\\"browser\\\"];\\nexports.after = [\\\"render\\\"];\\nexports.synchronous = true;\\n\\nvar isWaitingForAnimationFrame = 0, // Bitmask:\\n\\tANIM_FRAME_CAUSED_BY_LOAD = 1, // Animation frame was requested because of page load\\n\\tANIM_FRAME_CAUSED_BY_SCROLL = 2, // Animation frame was requested because of page scroll\\n\\tANIM_FRAME_CAUSED_BY_RESIZE = 4; // Animation frame was requested because of window resize\\n\\nexports.startup = function() {\\n\\twindow.addEventListener(\\\"load\\\",onLoad,false);\\n\\twindow.addEventListener(\\\"scroll\\\",onScroll,false);\\n\\twindow.addEventListener(\\\"resize\\\",onResize,false);\\n\\t$tw.hooks.addHook(\\\"th-page-refreshed\\\",function() {\\n\\t\\toptisizeFonts();\\n\\t\\tcheckTopmost();\\n\\t\\tcheckVisibility();\\n\\t\\tsaveViewportDimensions();\\n\\t});\\n};\\n\\nfunction onLoad(event) {\\n\\tif(!isWaitingForAnimationFrame) {\\n\\t\\twindow.requestAnimationFrame(worker);\\n\\t}\\n\\tisWaitingForAnimationFrame |= ANIM_FRAME_CAUSED_BY_LOAD;\\n}\\n\\nfunction onScroll(event) {\\n\\tif(!isWaitingForAnimationFrame) {\\n\\t\\twindow.requestAnimationFrame(worker);\\n\\t}\\n\\tisWaitingForAnimationFrame |= ANIM_FRAME_CAUSED_BY_SCROLL;\\n}\\n\\nfunction onResize(event) {\\n\\tif(!isWaitingForAnimationFrame) {\\n\\t\\twindow.requestAnimationFrame(worker);\\n\\t}\\n\\tisWaitingForAnimationFrame |= ANIM_FRAME_CAUSED_BY_RESIZE;\\n}\\n\\nfunction worker() {\\n\\tif(isWaitingForAnimationFrame & (ANIM_FRAME_CAUSED_BY_RESIZE | ANIM_FRAME_CAUSED_BY_LOAD)) {\\n\\t\\toptisizeFonts();\\n\\t\\tsaveViewportDimensions();\\n\\t}\\n\\tsetZoomClasses();\\n\\tcheckTopmost();\\n\\tcheckVisibility();\\n\\tisWaitingForAnimationFrame = 0;\\n}\\n\\nvar lastSiteWidth, lastMaquetteString;\\n\\nfunction optisizeFonts() {\\n\\tif($tw.wiki.getTiddlerText(\\\"$:/config/DynaView/Optisizer\\\") === \\\"yes\\\") {\\n\\t\\tvar domSite = document.querySelector(\\\".tc-dynaview-optisizer-site\\\"),\\n\\t\\t\\tdomMaquette = document.querySelector(\\\".tc-dynaview-optisizer-maquette\\\");\\n\\t\\tif(domSite && domMaquette) {\\n\\t\\t\\t// Check that we're not at the same size as last time\\n\\t\\t\\tif(domSite.offsetWidth === lastSiteWidth && $tw.wiki.getTiddlerText(\\\"$:/config/DynaView/Optisizer/Text\\\") === lastMaquetteString) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\t// Get the current font size\\n\\t\\t\\tdomMaquette.style.fontSize = \\\"\\\";\\n\\t\\t\\tvar initialFontSize = parseInt(window.getComputedStyle(domMaquette).fontSize,10),\\n\\t\\t\\t\\tminFontSize = 1,\\n\\t\\t\\t\\tmaxFontSize = 100,\\n\\t\\t\\t\\tadjustFontSize = maxFontSize,\\n\\t\\t\\t\\tnewFontSize = initialFontSize,\\n\\t\\t\\t\\tmaquetteWidth;\\n\\t\\t\\tlastSiteWidth = domSite.offsetWidth;\\n\\t\\t\\tlastMaquetteString = $tw.wiki.getTiddlerText(\\\"$:/config/DynaView/Optisizer/Text\\\");\\n\\t\\t\\twhile(domMaquette.firstChild) {\\n\\t\\t\\t\\tdomMaquette.removeChild(domMaquette.firstChild);\\n\\t\\t\\t}\\n\\t\\t\\tdomMaquette.appendChild(document.createTextNode(lastMaquetteString));\\n\\t\\t\\t// We use a binary search algorithm to find the optimum size\\n\\t\\t\\tdo {\\n\\t\\t\\t\\t// Apply the size we're considering\\n\\t\\t\\t\\tdomMaquette.style.fontSize = newFontSize + \\\"px\\\";\\n\\t\\t\\t\\t// Measure the width of the maquette\\n\\t\\t\\t\\tmaquetteWidth = domMaquette.offsetWidth;\\n\\t\\t\\t\\t// Adjust bigger or smaller\\n\\t\\t\\t\\tif(maquetteWidth < lastSiteWidth) {\\n\\t\\t\\t\\t\\tnewFontSize += adjustFontSize;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tnewFontSize -= adjustFontSize;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnewFontSize = Math.min(newFontSize,maxFontSize);\\n\\t\\t\\t\\tnewFontSize = Math.max(newFontSize,minFontSize);\\n\\t\\t\\t\\tadjustFontSize = adjustFontSize / 2;\\n\\t\\t\\t} while (adjustFontSize > 0.5);\\n\\t\\t\\tvar newFontSizeString = newFontSize + \\\"px\\\";\\n\\t\\t\\tif($tw.wiki.getTiddlerText(\\\"$:/state/DynaView/Optisizer/FontSize\\\") !== newFontSizeString) {\\n\\t\\t\\t\\t$tw.wiki.setText(\\\"$:/state/DynaView/Optisizer/FontSize\\\",undefined,undefined,newFontSizeString,undefined);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction setZoomClasses() {\\n\\tvar zoomFactor = document.body.scrollWidth / window.innerWidth,\\n\\t\\tclassList = document.body.classList;\\n\\tclassList.add(\\\"tc-dynaview\\\");\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-1\\\",zoomFactor <= 2);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-1-and-above\\\",zoomFactor >= 1);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-1a-and-above\\\",zoomFactor >= 1.14);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-1b-and-above\\\",zoomFactor >= 1.33);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-1c-and-above\\\",zoomFactor >= 1.6);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-2\\\",zoomFactor >= 2 && zoomFactor <= 3);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-2-and-above\\\",zoomFactor >= 2);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-2a-and-above\\\",zoomFactor >= 2.66);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-3\\\",zoomFactor >= 3 && zoomFactor <= 4);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-3-and-above\\\",zoomFactor >= 3);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-4\\\",zoomFactor >= 4);\\n\\tclassList.toggle(\\\"tc-dynaview-zoom-factor-4-and-above\\\",zoomFactor >= 4);\\n}\\n\\nfunction checkVisibility() {\\n\\tvar elements = document.querySelectorAll(\\\".tc-dynaview-set-tiddler-when-visible\\\");\\n\\t$tw.utils.each(elements,function(element) {\\n\\t\\t// Bail if we've already triggered this element\\n\\t\\tif(element.getAttribute(\\\"data-dynaview-has-triggered\\\") === \\\"true\\\") {\\n\\t\\t\\tif(element.getAttribute(\\\"data-dynaview-unset-tiddler\\\") !== undefined && element.getAttribute(\\\"data-dynaview-unset-value\\\") !== undefined) {\\n\\t\\t\\t\\t// Check if the element is visible\\n\\t\\t\\t\\tvar elementRect = element.getBoundingClientRect(),\\n\\t\\t\\t\\t\\tviewportWidth = window.innerWidth || document.documentElement.clientWidth,\\n\\t\\t\\t\\t\\tviewportHeight = window.innerHeight || document.documentElement.clientHeight,\\n\\t\\t\\t\\t\\tviewportRect = {\\n\\t\\t\\t\\t\\t\\tleft: 0,\\n\\t\\t\\t\\t\\t\\tright: viewportWidth,\\n\\t\\t\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\t\\t\\tbottom: viewportHeight\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(element.classList.contains(\\\"tc-dynaview-expand-viewport\\\")) {\\n\\t\\t\\t\\t\\tviewportRect.left -= viewportWidth;\\n\\t\\t\\t\\t\\tviewportRect.right += viewportWidth;\\n\\t\\t\\t\\t\\tviewportRect.top -= viewportHeight;\\n\\t\\t\\t\\t\\tviewportRect.bottom += viewportHeight;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(elementRect.left > viewportRect.right || \\n\\t\\t\\t\\t\\telementRect.right < viewportRect.left || \\n\\t\\t\\t\\t\\telementRect.top > viewportRect.bottom ||\\n\\t\\t\\t\\t\\telementRect.bottom < viewportRect.top) {\\n\\t\\t\\t\\t\\t// Set the tiddler value\\n\\t\\t\\t\\t\\tvar tiddler = element.getAttribute(\\\"data-dynaview-unset-tiddler\\\"),\\n\\t\\t\\t\\t\\t\\tvalue = element.getAttribute(\\\"data-dynaview-unset-value\\\") || \\\"\\\";\\n\\t\\t\\t\\t\\tif(tiddler && $tw.wiki.getTiddlerText(tiddler) !== value) {\\n\\t\\t\\t\\t\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler({title: tiddler, text: value}));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telement.setAttribute(\\\"data-dynaview-has-triggered\\\",\\\"false\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\t// Check if the element is visible\\n\\t\\tvar elementRect = element.getBoundingClientRect(),\\n\\t\\t\\tviewportWidth = window.innerWidth || document.documentElement.clientWidth,\\n\\t\\t\\tviewportHeight = window.innerHeight || document.documentElement.clientHeight,\\n\\t\\t\\tviewportRect = {\\n\\t\\t\\t\\tleft: 0,\\n\\t\\t\\t\\tright: viewportWidth,\\n\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\tbottom: viewportHeight\\n\\t\\t\\t};\\n\\t\\tif(element.classList.contains(\\\"tc-dynaview-expand-viewport\\\")) {\\n\\t\\t\\tviewportRect.left -= viewportWidth;\\n\\t\\t\\tviewportRect.right += viewportWidth;\\n\\t\\t\\tviewportRect.top -= viewportHeight;\\n\\t\\t\\tviewportRect.bottom += viewportHeight;\\n\\t\\t}\\n\\t\\tif(!(elementRect.left > viewportRect.right || \\n\\t\\t\\t\\telementRect.right < viewportRect.left || \\n\\t\\t\\t\\telementRect.top > viewportRect.bottom ||\\n\\t\\t\\t\\telementRect.bottom < viewportRect.top)) {\\n\\t\\t\\t// Set the tiddler value\\n\\t\\t\\tvar tiddler = element.getAttribute(\\\"data-dynaview-set-tiddler\\\"),\\n\\t\\t\\t\\tvalue = element.getAttribute(\\\"data-dynaview-set-value\\\") || \\\"\\\";\\n\\t\\t\\tif(tiddler && $tw.wiki.getTiddlerText(tiddler) !== value) {\\n\\t\\t\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler({title: tiddler, text: value}));\\n\\t\\t\\t}\\n\\t\\t\\telement.setAttribute(\\\"data-dynaview-has-triggered\\\",\\\"true\\\");\\n\\t\\t}\\n\\t});\\n}\\n\\nfunction checkTopmost() {\\n\\tif($tw.wiki.getTiddlerText(\\\"$:/config/DynaView/UpdateAddressBar\\\") === \\\"yes\\\") {\\n\\t\\tvar elements = document.querySelectorAll(\\\".tc-tiddler-frame[data-tiddler-title]\\\"),\\n\\t\\t\\ttopmostElement = null,\\n\\t\\t\\ttopmostElementTop = 1 * 1000 * 1000;\\n\\t\\t$tw.utils.each(elements,function(element) {\\n\\t\\t\\t// Check if the element is visible\\n\\t\\t\\tvar elementRect = element.getBoundingClientRect();\\n\\t\\t\\tif((elementRect.top < topmostElementTop) && (elementRect.bottom > 0)) {\\n\\t\\t\\t\\ttopmostElement = element;\\n\\t\\t\\t\\ttopmostElementTop = elementRect.top;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tif(topmostElement) {\\n\\t\\t\\tvar title = topmostElement.getAttribute(\\\"data-tiddler-title\\\"),\\n\\t\\t\\t\\thash = \\\"#\\\" + encodeURIComponent(title) + \\\":\\\" + encodeURIComponent(\\\"[list[$:/StoryList]]\\\");\\n\\t\\t\\tif(title && $tw.locationHash !== hash) {\\n\\t\\t\\t\\t$tw.locationHash = hash;\\n\\t\\t\\t\\twindow.location.hash = hash;\\t\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction saveViewportDimensions() {\\n\\tif($tw.wiki.getTiddlerText(\\\"$:/config/DynaView/ViewportDimensions\\\") === \\\"yes\\\") {\\n\\t\\tvar viewportWidth = window.innerWidth || document.documentElement.clientWidth,\\n\\t\\t\\tviewportHeight = window.innerHeight || document.documentElement.clientHeight;\\n\\t\\tif($tw.wiki.getTiddlerText(\\\"$:/state/DynaView/ViewportDimensions/Width\\\") !== viewportWidth.toString()) {\\n\\t\\t\\t$tw.wiki.setText(\\\"$:/state/DynaView/ViewportDimensions/Width\\\",undefined,undefined,viewportWidth.toString(),undefined);\\n\\t\\t}\\n\\t\\tif($tw.wiki.getTiddlerText(\\\"$:/state/DynaView/ViewportDimensions/Height\\\") !== viewportHeight.toString()) {\\n\\t\\t\\t$tw.wiki.setText(\\\"$:/state/DynaView/ViewportDimensions/Height\\\",undefined,undefined,viewportHeight.toString(),undefined);\\n\\t\\t}\\n\\t}\\n}\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/examples/font-optisizer\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/examples/font-optisizer\",\n            \"tags\": \"$:/tags/dynaviewExamples\",\n            \"caption\": \"Font Optisizer\",\n            \"text\": \"<$button>\\n<$action-setfield $tiddler=\\\"$:/config/DynaView/Optisizer\\\" $value=\\\"yes\\\"/>\\n<$action-setfield $tiddler=\\\"$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize\\\" $value=\\\"{{$:/state/DynaView/Optisizer/FontSize}}\\\"/>\\n<$action-setfield $tiddler=\\\"$:/themes/tiddlywiki/vanilla/metrics/bodylineheight\\\" $value=\\\"1.5\\\"/>\\nEnable font optisizer for tiddler body text\\n</$button>\\n\\n<$button>\\n<$action-setfield $tiddler=\\\"$:/config/DynaView/Optisizer\\\" $value=\\\"no\\\"/>\\n<$action-setfield $tiddler=\\\"$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize\\\" $value=\\\"14px\\\"/>\\n<$action-setfield $tiddler=\\\"$:/themes/tiddlywiki/vanilla/metrics/bodylineheight\\\" $value=\\\"20px\\\"/>\\nDisable font optisizer\\n</$button>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/examples/progressive-text\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/examples/progressive-text\",\n            \"tags\": \"$:/tags/dynaviewExamples\",\n            \"caption\": \"Progressive Text\",\n            \"text\": \"//Zoom into the space below to see a poem//\\n\\n''N.B. This example only works in Safari at the moment''\\n\\n<pre><div class=\\\"tc-dynaview-zoom-visible-1-and-above\\\" style=\\\"font-size: 0.7em;line-height:1.5;\\\">\\n         'Fury said to a\\n         mouse, That he\\n        met in the\\n       house,</div><div class=\\\"tc-dynaview-zoom-visible-1a-and-above\\\" style=\\\"font-size: 0.6em;line-height:1.5;\\\">     \\\"Let us\\n      both go to\\n       law: I will\\n        prosecute\\n         YOU.--Come,</div><div class=\\\"tc-dynaview-zoom-visible-1b-and-above\\\" style=\\\"font-size: 0.5em;line-height:1.5;\\\">           I'll take no\\n           denial; We\\n          must have a\\n        trial: For</div><div class=\\\"tc-dynaview-zoom-visible-1c-and-above\\\" style=\\\"font-size: 0.4em;line-height:1.5;\\\">      really this\\n     morning I've\\n    nothing\\n    to do.\\\"</div><div class=\\\"tc-dynaview-zoom-visible-2-and-above\\\" style=\\\"font-size: 0.3em;line-height:1.5;\\\">     Said the\\n      mouse to the\\n       cur, \\\"Such\\n        a trial,\\n         dear Sir,</div><div class=\\\"tc-dynaview-zoom-visible-2a-and-above\\\" style=\\\"font-size: 0.25em;line-height:1.5;\\\">            With\\n          no jury\\n        or judge,\\n       would be\\n      wasting\\n      our\\n      breath.\\\"</div><div class=\\\"tc-dynaview-zoom-visible-3-and-above\\\" style=\\\"font-size: 0.2em;line-height:1.5;\\\">       \\\"I'll be\\n        judge, I'll\\n         be jury,\\\"\\n            Said\\n         cunning\\n          old Fury:\\n          \\\"I'll\\n          try the\\n            whole\\n            cause,</div><div class=\\\"tc-dynaview-zoom-visible-4-and-above\\\" style=\\\"font-size: 0.15em;line-height:1.5;\\\">              and\\n           condemn\\n           you\\n          to\\n           death.\\\"'\\n</div></pre>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/examples/reveal-on-scroll\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/examples/reveal-on-scroll\",\n            \"tags\": \"$:/tags/dynaviewExamples\",\n            \"caption\": \"Reveal on Scroll\",\n            \"text\": \"\\\\define indicator(index)\\n<$reveal state=\\\"$:/state/reveal-on-scroll/example$index$\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n$index$\\n</$reveal>\\n\\\\end\\n\\n\\\\define lorem-ipsum(index)\\n<div class=\\\"tc-dynaview-set-tiddler-when-visible\\\" style=\\\"min-height: 75px;\\\" data-dynaview-set-tiddler=\\\"$:/state/reveal-on-scroll/example$index$\\\" data-dynaview-set-value=\\\"yes\\\">\\n<h1>Heading $index$</h1>\\n<$reveal state=\\\"$:/state/reveal-on-scroll/example$index$\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n(Rendered at <<now \\\"[UTC]YYYY-0MM-0DD 0hh:0mm:0ss.XXX\\\">>) Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\n</$reveal>\\n</div>\\n\\\\end\\n\\n\\\\define lorem-ipsum-unset(index)\\n<div class=\\\"tc-dynaview-set-tiddler-when-visible\\\" style=\\\"min-height: 75px;\\\" data-dynaview-set-tiddler=\\\"$:/state/reveal-on-scroll/example$index$\\\" data-dynaview-set-value=\\\"yes\\\" data-dynaview-unset-tiddler=\\\"$:/state/reveal-on-scroll/example$index$\\\" data-dynaview-unset-value=\\\"no\\\">\\n<h1>Heading $index$</h1>\\n<$reveal state=\\\"$:/state/reveal-on-scroll/example$index$\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n(Rendered at <<now \\\"[UTC]YYYY-0MM-0DD 0hh:0mm:0ss.XXX\\\">>) Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\n</$reveal>\\n</div>\\n\\\\end\\n\\n<$reveal state=\\\"$:/state/dynaview-example/reveal-scroll/unset\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\n\\n!!!Same example, showing elements when they scroll into view and hiding elements when they scroll out of view:<br>\\n<$button set=\\\"$:/state/dynaview-example/reveal-scroll/unset\\\" setTo=\\\"yes\\\">Change Example</$button>\\n</$reveal>\\n<$reveal state=\\\"$:/state/dynaview-example/reveal-scroll/unset\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n\\n!!!Same example, but only showing elements when they scroll into view:<br>\\n<$button set=\\\"$:/state/dynaview-example/reveal-scroll/unset\\\" setTo=\\\"no\\\">Change Example</$button>\\n</$reveal>\\n\\nVisible: <$list filter=\\\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\\">\\n<$macrocall $name=\\\"indicator\\\" index=<<currentTiddler>>/>\\n</$list>\\n\\n<$reveal state=\\\"$:/state/dynaview-example/reveal-scroll/unset\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\n<$list filter=\\\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\\">\\n<$macrocall $name=\\\"lorem-ipsum\\\" index=<<currentTiddler>>/>\\n</$list>\\n</$reveal>\\n<$reveal state=\\\"$:/state/dynaview-example/reveal-scroll/unset\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n<$list filter=\\\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\\">\\n<$macrocall $name=\\\"lorem-ipsum-unset\\\" index=<<currentTiddler>>/>\\n</$list>\\n</$reveal>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/TiddlyWiki Architecture\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/TiddlyWiki Architecture\",\n            \"caption\": \"TiddlyWiki Architecture\",\n            \"tags\": \"[[$:/tags:/ZoomableDiagram]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Browser Architecture\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Browser Architecture\",\n            \"caption\": \"Browser Architecture\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/TiddlyWiki Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Service Workers\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Service Workers\",\n            \"caption\": \"Service Workers\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Browser Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Service Bosses\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Service Bosses\",\n            \"caption\": \"Service Bosses\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Service Workers]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Out of Service Workers\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Out of Service Workers\",\n            \"caption\": \"Out of Service Workers\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Service Workers]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Events\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Events\",\n            \"caption\": \"Events\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Browser Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Non Events\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Non Events\",\n            \"caption\": \"Non Events\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Events]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Past Events\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Past Events\",\n            \"caption\": \"Past Events\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Events]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/DOM\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/DOM\",\n            \"caption\": \"DOM\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Browser Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Nodes\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Nodes\",\n            \"caption\": \"Nodes\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/DOM]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Attributes\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Attributes\",\n            \"caption\": \"Attributes\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/DOM]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Pathogens\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Pathogens\",\n            \"caption\": \"Pathogens\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/DOM]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Connection\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Connection\",\n            \"caption\": \"Connection\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/TiddlyWiki Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/HTTP\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/HTTP\",\n            \"caption\": \"HTTP\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Connection]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Server Architecture\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Server Architecture\",\n            \"caption\": \"Server Architecture\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/TiddlyWiki Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Node.js\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Node.js\",\n            \"caption\": \"Node.js\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Server Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/C/C++\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/C/C++\",\n            \"caption\": \"C/C++\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Node.js]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Quotation Marks\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Quotation Marks\",\n            \"caption\": \"Quotation Marks\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Node.js]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Asterisks\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Asterisks\",\n            \"caption\": \"Asterisks\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Node.js]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Potatoes\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Potatoes\",\n            \"caption\": \"Potatoes\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Server Architecture]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Carrots\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Carrots\",\n            \"caption\": \"Carrots\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Potatoes]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Apricots\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Apricots\",\n            \"caption\": \"Apricots\",\n            \"tags\": \"[[$:/plugins/tiddlywiki/dynaview/zoomable-diagram/Potatoes]]\",\n            \"text\": \"<<lorem-ipsum>>\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/examples/zoomable-diagram\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/examples/zoomable-diagram\",\n            \"tags\": \"$:/tags/dynaviewExamples\",\n            \"caption\": \"Zoomable Diagram\",\n            \"text\": \"\\\\define lorem-ipsum()\\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\n\\\\end\\n\\n\\\\define zoomable-diagram(tag,level:\\\"1 2 3 4 5 6 7\\\")\\n<div class={{{ $level$ +[addprefix[zoomable-diagram-level-]addprefix[zoomable-diagram-list ]] }}}>\\n\\t<$list filter=\\\"[all[shadows+tiddlers]tag[$tag$]]\\\">\\n\\t\\t<div class=\\\"zoomable-diagram-item\\\">\\n\\t\\t\\t<div class=\\\"zoomable-diagram-title\\\">\\n\\t\\t\\t\\t<$transclude field=\\\"caption\\\" mode=\\\"inline\\\"/>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"zoomable-diagram-body\\\">\\n\\t\\t\\t\\t<div class=\\\"zoomable-diagram-text\\\">\\n\\t\\t\\t\\t\\t<$transclude field=\\\"text\\\" mode=\\\"block\\\"/>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"zoomable-diagram-children\\\">\\n\\t\\t\\t\\t\\t<$set name=\\\"new-level\\\" filter=\\\"\\\"\\\" $level$ +[butfirst[]] \\\"\\\"\\\">\\n\\t\\t\\t\\t\\t\\t<$macrocall $name=\\\"zoomable-diagram\\\" tag=<<currentTiddler>> level=<<new-level>>/>\\n\\t\\t\\t\\t\\t</$set>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</$list>\\n</div>\\n\\\\end\\n\\n//Zoom into the diagram below to find out more//\\n\\n''N.B. This example only works in Safari at the moment''\\n\\n<style>\\n.zoomable-diagram-wrapper {\\n\\tmin-height: 300px;\\n}\\n\\n.zoomable-diagram-list {\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tline-height: 1.5;\\n}\\n\\n.zoomable-diagram-level-1 {font-size: 1em;}\\n.zoomable-diagram-level-2 {font-size: 0.8em;}\\n.zoomable-diagram-level-3 {font-size: 0.6em;}\\n.zoomable-diagram-level-4 {font-size: 0.4em;}\\n\\n.zoomable-diagram-level-1,\\n.zoomable-diagram-level-2,\\n.zoomable-diagram-level-3,\\n.zoomable-diagram-level-4,\\n.zoomable-diagram-text {\\n\\ttransition: opacity 150ms ease-in-out;\\n}\\n\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1 .zoomable-diagram-level-1 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1 .zoomable-diagram-level-2 {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1 .zoomable-diagram-level-3 {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1 .zoomable-diagram-level-4 {opacity: 0;}\\n\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2 .zoomable-diagram-level-1 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2 .zoomable-diagram-level-1 > .zoomable-diagram-item > .zoomable-diagram-body > .zoomable-diagram-text {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2 .zoomable-diagram-level-2 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2 .zoomable-diagram-level-3 {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2 .zoomable-diagram-level-4 {opacity: 0;}\\n\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3 .zoomable-diagram-level-1 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3 .zoomable-diagram-level-1 > .zoomable-diagram-item > .zoomable-diagram-body > .zoomable-diagram-text {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3 .zoomable-diagram-level-2 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3 .zoomable-diagram-level-2 > .zoomable-diagram-item > .zoomable-diagram-body > .zoomable-diagram-text {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3 .zoomable-diagram-level-3 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3 .zoomable-diagram-level-4 {opacity: 0;}\\n\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .zoomable-diagram-level-1 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .zoomable-diagram-level-1 > .zoomable-diagram-item > .zoomable-diagram-body > .zoomable-diagram-text {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .zoomable-diagram-level-2 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .zoomable-diagram-level-2 > .zoomable-diagram-item > .zoomable-diagram-body > .zoomable-diagram-text {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .zoomable-diagram-level-3 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .zoomable-diagram-level-3 > .zoomable-diagram-item > .zoomable-diagram-body > .zoomable-diagram-text {opacity: 0;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .zoomable-diagram-level-4 {opacity: 1;}\\n\\n.zoomable-diagram-item {\\n\\tmargin: 0.5em;\\n\\tflex: 1 1 0;\\n}\\n\\n.zoomable-diagram-title {\\n\\tfont-weight: bold;\\n}\\n\\n.zoomable-diagram-body {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tposition: relative;\\n}\\n\\n.zoomable-diagram-text {\\n\\tposition: absolute;\\n}\\n\\n.zoomable-diagram-children {\\n}\\n\\n</style>\\n\\n<div class=\\\"zoomable-diagram-wrapper\\\">\\n<<zoomable-diagram \\\"$:/tags:/ZoomableDiagram\\\">>\\n</div>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/examples/zoomable-tooltips\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/examples/zoomable-tooltips\",\n            \"tags\": \"$:/tags/dynaviewExamples\",\n            \"caption\": \"Zoomable Tooltips\",\n            \"text\": \"//Zoom into the images below to see their titles//\\n\\n''N.B. This example only works in Safari at the moment''\\n\\n<style>\\n.zoomable-tooltip-demo-container {\\n\\tdisplay: flex;\\n\\tflex-wrap: wrap;\\n}\\n\\n.zoomable-tooltip-demo-item {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tflex: 0 0 auto;\\n\\tpadding: 4px;\\n\\twidth: 5em;\\n\\theight: 7em;\\n}\\n\\n.zoomable-tooltip-demo-item-image {\\n\\tflex: 0 0 auto;\\n}\\n\\n.zoomable-tooltip-demo-item-image svg {\\n\\twidth: 4em;\\n\\theight: 4em;\\n}\\n\\n.zoomable-tooltip-demo-item-text {\\n\\tfont-size:0.3em;\\n\\tflex: 0 0 auto;\\n\\tline-height: 1.1;\\n\\ttext-align: center;\\n    text-align: center;\\n    background: #f7f747;\\n    border: 1px solid #c2c235;\\n    padding: 2px;\\n    border-radius: 2px;\\n}\\n</style>\\n<div class=\\\"zoomable-tooltip-demo-container\\\">\\n<$list filter=\\\"[all[tiddlers+shadows]tag[$:/tags/Image]]\\\">\\n<div class=\\\"zoomable-tooltip-demo-item\\\">\\n<span class=\\\"zoomable-tooltip-demo-item-image\\\">\\n<$transclude/>\\n</span>\\n<span class=\\\"zoomable-tooltip-demo-item-text tc-dynaview-zoom-visible-3-and-above\\\">\\n<$text text=<<currentTiddler>>/>\\n</span>\\n</div>\\n</$list>\\n</div>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/examples\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/examples\",\n            \"text\": \"<<tabs \\\"[all[tiddlers+shadows]tag[$:/tags/dynaviewExamples]!has[draft.of]]\\\" \\\"$:/plugins/tiddlywiki/dynaview/examples/progressive-text\\\">>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/macros\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/macros\",\n            \"tags\": \"$:/tags/Macro\",\n            \"text\": \"\\\\define transclude-when-visible(tiddler,mode:\\\"block\\\",state,minHeight:\\\"1em\\\",loadingText:\\\"&hellip;\\\")\\n<div class=\\\"tc-dynaview-set-tiddler-when-visible tc-dynaview-expand-viewport\\\" style=\\\"min-height: $minHeight$;\\\" data-dynaview-set-tiddler=<<__state__>> data-dynaview-set-value=\\\"visible\\\">\\n<$reveal state=<<__state__>> type=\\\"match\\\" text=\\\"visible\\\" tag=\\\"div\\\">\\n<$transclude tiddler=<<__tiddler__>> mode=<<__block__>>/>\\n</$reveal>\\n<$reveal state=<<__state__>> type=\\\"nomatch\\\" text=\\\"visible\\\" tag=\\\"div\\\">\\n$loadingText$\\n</$reveal>\\n</div>\\n\\\\end\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/optisizer-maquette\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/optisizer-maquette\",\n            \"tags\": \"$:/tags/AboveStory\",\n            \"text\": \"<div class=\\\"tc-tiddler-frame\\\" style=\\\"border: none; background: none; -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none; margin-top: 0; margin-bottom: 0; padding-top: 0; padding-bottom: 0; \\\">\\n\\n<div class=\\\"tc-tiddler-body tc-dynaview-optisizer-site\\\" style=\\\"margin-top: -3em; visibility: hidden;\\\">\\n\\nX\\n\\n</div>\\n\\n</div>\\n\\n<div style=\\\"position: relative;\\\">\\n\\n<div style=\\\"position: absolute; visibility: hidden;\\\">\\n\\n<div class=\\\"tc-dynaview-optisizer-maquette\\\" style=\\\"white-space: nowrap;\\\">\\n\\n</div>\\n\\n</div>\\n\\n</div>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/dynaview/readme\": {\n            \"title\": \"$:/plugins/tiddlywiki/dynaview/readme\",\n            \"text\": \"! Dynaview\\n\\nThis plugin makes it possible to build user interfaces that dynamically respond to changes in the browser viewport via scrolling or zooming:\\n\\n* CSS classes that allow rendering to be deferred until the output is scrolled into view\\n* CSS classes that allow the opacity of DOM elements to vary according to the current zoom level\\n* A daemon that can dynamically update a pair of state tiddlers with the current dimensions of the browser viewport\\n* A daemon that can dynamically adjust the size of text to yield a particular number of characters per line\\n* A daemon that can dynamically update the address bar with the title of the tiddler at the top of the viewport\\n\\nSome points to note about the zoom features:\\n\\n<<<\\n\\n* The zoom level currently only works on Safari, both on Mac OS and on the iPhone/iPad\\n* The zoom level tracked by the plugin is the pinch-zoom level, and not the text-zoom level\\n* Rather than being progressively rendered as needed, hidden item are rendered with zero opacity. Which means that they can still be interacted with\\n\\nThis is really just a proof of concept to allow the user experience to be evaluated. A production version would need to work in all browsers, which would mean adopting a polyfill such as [[Hammer.js|http://hammerjs.github.io/]] to give us manual pan and zoom support. It would also allow deeper levels of zoom.\\n\\n<<<\\n\"\n        },\n        \"$:/plugins/tiddlywiki/help/styles\": {\n            \"title\": \"$:/plugins/tiddlywiki/help/styles\",\n            \"tags\": \"[[$:/tags/Stylesheet]]\",\n            \"text\": \"\\\\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline\\n\\nbody.tc-dynaview .tc-dynaview-zoom-visible-1-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-1a-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-1b-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-1c-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-2-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-2a-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-3-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-4-and-above,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-1,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-2,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-3,\\nbody.tc-dynaview .tc-dynaview-zoom-visible-4 {\\n\\ttransition: opacity 150ms ease-in-out;\\n\\topacity: 0;\\n}\\n\\nbody.tc-dynaview .tc-dynaview-zoom-visible-1-and-above {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1a-and-above .tc-dynaview-zoom-visible-1a-and-above {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1b-and-above .tc-dynaview-zoom-visible-1b-and-above {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1c-and-above .tc-dynaview-zoom-visible-1c-and-above {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2-and-above .tc-dynaview-zoom-visible-2-and-above {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2a-and-above .tc-dynaview-zoom-visible-2a-and-above {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3-and-above .tc-dynaview-zoom-visible-3-and-above {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4-and-above .tc-dynaview-zoom-visible-4-and-above {opacity: 1;}\\n\\nbody.tc-dynaview.tc-dynaview-zoom-factor-1 .tc-dynaview-zoom-visible-1 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-2 .tc-dynaview-zoom-visible-2 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-3 .tc-dynaview-zoom-visible-3 {opacity: 1;}\\nbody.tc-dynaview.tc-dynaview-zoom-factor-4 .tc-dynaview-zoom-visible-4 {opacity: 1;}\\n\"\n        }\n    }\n}"
}